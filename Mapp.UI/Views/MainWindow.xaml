<Window x:Class="Shmap.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Mapp"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        xmlns:martinApp="clr-namespace:Mapp"
        xmlns:viewModels="clr-namespace:Shmap.ViewModels"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:resources="clr-namespace:Shmap.UI.Views.Resources"
        xmlns:viewModelsNs="clr-namespace:Shmap.UI.ViewModels"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="{Binding WindowHeight, Mode=TwoWay}" Width="{Binding WindowWidth, Mode=TwoWay}"
        WindowStartupLocation="Manual" WindowState="{Binding WindowState, Mode=TwoWay}" Top="{Binding WindowTop, Mode=TwoWay}" Left="{Binding WindowLeft, Mode=TwoWay}"
        d:DataContext="{d:DesignInstance viewModelsNs:MainWindowViewModel, IsDesignTimeCreatable=True}"
        DataContext="{Binding MainWindowVm, Source={StaticResource ViewModelLocator}}">

    <Window.Resources>
        <martinApp:ProductsListConverter x:Key="ProductsConverter"/>
        <martinApp:ProductsListToSkuConverter x:Key="ProductsToSkuConverter"/>

        <!--Applied to every column header-->
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <ControlTemplate x:Key="ErrorTemplate">
            <TextBlock Text="!"  Width="auto" FontWeight="Bold" Foreground="Red" Margin="5 0 5 0"
                       TextAlignment="Center" HorizontalAlignment="Stretch" FontSize="20">
                <TextBlock.ToolTip>
                    <Binding RelativeSource="{RelativeSource FindAncestor, 
                                    AncestorType={x:Type DataGridRow}}"
                                 Path="(Validation.Errors)/ErrorContent" />
                </TextBlock.ToolTip>
            </TextBlock>
        </ControlTemplate>

        <Style  x:Key="EditingCellStyle"  TargetType="{x:Type TextBox}">
            <!--this ensures that text looks the same way in both TextBox and TextBlock-->
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Padding" Value="-3 -1 -3 -1" />
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="TextBoxWithValidationTipStyle" TargetType="TextBox" BasedOn="{StaticResource EditingCellStyle}">
            <!--<Setter Property="TextAlignment" Value="Center" />-->
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Background" Value="Pink"/>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, 
                                            Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ParamInputWithTipStyle" TargetType="TextBox" 
               BasedOn="{StaticResource TextBoxWithValidationTipStyle}">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="150" />
            <Setter Property="Height" Value="35" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="ToolTip" Value="Data chybi nebo obsahuji chyby"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="WrapBlockStyle" TargetType="{x:Type TextBlock}" >
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center" />
        </Style>

        <!--REMOVE-->
        <Style x:Key="UserInputBlockStyle" TargetType="{x:Type TextBlock}" >
            <Setter Property="Background" Value="LightBlue"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center" />
        </Style>

        <Style x:Key="TextBlockWithValidationTipStyle" TargetType="TextBlock" 
               BasedOn="{StaticResource UserInputBlockStyle}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Background" Value="Pink"/>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, 
                                            Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ParamLabelStyle" TargetType="Label">
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>


        <Style x:Key="UserInputCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="LightBlue"/>
            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToggleableReadonlyCellStyle" TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <!--Due to virtualization sometimes causes harmless binding errors-->
                <DataTrigger Binding="{Binding Path=IsFullyEditable}" Value="False">
                    <Setter Property="IsTabStop" Value="False"></Setter>
                    <Setter Property="Focusable" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" >
                            <ContentPresenter Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <!--<Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="DarkSeaGreen"/>-->
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="BorderBrush" Value="SandyBrown"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Cursor="Hand" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" >
                            <ContentPresenter Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <!--<Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="DarkSeaGreen"/>-->
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="BorderBrush" Value="SandyBrown"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <command:EventToCommand Command="{Binding Mode=OneWay, Path=WindowClosingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <TabControl>
        <TabItem Header="Amazon - konverter">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Margin="20">
                    <Button Content="Zvolit fakturu" Style="{StaticResource ActionButtonStyle}" 
                            Command="{Binding SelectAmazonInvoicesCommand}"/>

                    <Label Content="Posledni existujici cislo v systemu:" Style="{StaticResource ParamLabelStyle}" />
                    <local:NumericTextBox MaxLength="9" Style="{StaticResource ParamInputWithTipStyle}"
                                          Text="{resources:NullableBinding ExistingInvoiceNumber}" />

                    <Label Content="Default email:"  Style="{StaticResource ParamLabelStyle}" />
                    <local:EmailTextBox MaxLength="30" Style="{StaticResource ParamInputWithTipStyle}" 
                                        Text="{resources:ValidatableBinding DefaultEmail}" />

                    <CheckBox Content="Otevrit slozku po konvertaci" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10"
                              IsChecked="{Binding OpenTargetFolderAfterConversion}"/>

                    <Button Content="Konvertovat..." Style="{StaticResource ActionButtonStyle}" 
                            Command="{Binding ExportConvertedAmazonInvoicesCommand}"/>
                </StackPanel>

                <resources:ValidatableDataGrid Grid.Row="1" Margin="5" AutoGenerateColumns="false" CanUserAddRows="false" CanUserDeleteRows="False"
                          EnableColumnVirtualization="False" EnableRowVirtualization="False" VirtualizingPanel.ScrollUnit="Pixel"
                          PreviewTextInput="DataGrid_PreviewTextInput"
                          RowValidationErrorTemplate="{StaticResource ErrorTemplate}" 
                          ItemsSource="{Binding InvoiceItemsCollectionView}"  >

                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <DataGridRowsPresenter/>
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander IsExpanded="True" Background="MediumPurple">
                                                    <Expander.Style>
                                                        <Style TargetType="{x:Type Expander}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Name}" Value="False">
                                                                    <Setter Property="FontStyle" Value="Italic"/>
                                                                    <Setter Property="Foreground" Value="Gray"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Expander.Style>
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock FontSize="11" FontStyle="Italic" Foreground="White">
                                                                <TextBlock.Text>
                                                                    <MultiBinding StringFormat="Groupovano dle: {0}, pocet zaznamu: {1}">
                                                                        <Binding Path="Name" />
                                                                        <Binding Path="ItemCount" />
                                                                    </MultiBinding>
                                                                </TextBlock.Text>
                                                            </TextBlock>
                                                        </StackPanel>
                                                    </Expander.Header>
                                                    <ItemsPresenter />
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" >
                                        <TextBlock Text="{Binding Name}"  Margin="5 2 5 2"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </DataGrid.GroupStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Cislo (Amazon)" MinWidth="150" Width="100" IsReadOnly="true" 
                                            CellStyle="{StaticResource CellStyle}"
                                            Binding="{Binding AmazonNumber}" />

                        <DataGridTextColumn Header="Puvod" MinWidth="100" Width="100" IsReadOnly="true" 
                                            Binding="{Binding SalesChannel}"/>

                        <DataGridTextColumn Header="Nazev produktu (Amazon)" Width="*" 
                                            CellStyle ="{StaticResource UserInputCellStyle}"
                                            EditingElementStyle="{StaticResource EditingCellStyle}"
                                            ElementStyle="{StaticResource UserInputBlockStyle}"
                                            Binding="{Binding AmazonProductName}" />

                        <DataGridTextColumn Header="SKU (Amazon)" IsReadOnly="True" MinWidth="100" Width="150" 
                                            Binding="{Binding AmazonSku}" />

                        <DataGridTextColumn Header="Kod zbozi" Width="150" 
                                            CellStyle="{StaticResource ToggleableReadonlyCellStyle}"
                                            EditingElementStyle="{StaticResource EditingCellStyle}"
                                            Binding="{Binding WarehouseProductCode,Mode=TwoWay, ValidatesOnDataErrors=True}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property="Validation.HasError" Value="True">
                                            <Setter Property="ToolTip"
                                            Value="{Binding RelativeSource={RelativeSource Self},
                                                Path=(Validation.Errors)/ErrorContent}"/>
                                            </Trigger>
                                            </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTemplateColumn Header="Mnozstvi v packu" Width="120" 
                                                CellStyle="{StaticResource ToggleableReadonlyCellStyle}">
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <local:NumericTextBox MaxLength="3"
                                                          Style="{StaticResource TextBoxWithValidationTipStyle}"
                                                          Text="{resources:NullableBinding PackQuantityMultiplier}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Style="{StaticResource TextBlockWithValidationTipStyle}"
                                               Text="{Binding PackQuantityMultiplier}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </resources:ValidatableDataGrid>


                <resources:ValidatableDataGrid Grid.Row="2" Margin="5" AutoGenerateColumns="false" CanUserAddRows="false" CanUserDeleteRows="False"
                          EnableRowVirtualization="False" EnableColumnVirtualization="False" VirtualizingPanel.ScrollUnit="Pixel"
                          RowValidationErrorTemplate="{StaticResource ErrorTemplate}" 
                          ItemsSource="{Binding Invoices}" >
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Cislo (Amazon)" Width="150" IsReadOnly="true"
                                            Binding="{Binding AmazonNumber}"/>

                        <DataGridTextColumn Header="Puvod" Width="100" IsReadOnly="true"
                                            Binding="{Binding SalesChannel}"/>

                        <DataGridTextColumn Header="Produkty" Width="2*" IsReadOnly="true" 
                                            ElementStyle="{StaticResource WrapBlockStyle}"
                                            Binding="{Binding InvoiceProductNames, Converter={StaticResource ProductsConverter}}"/>

                        <DataGridTextColumn Header="SKU kody" Width="120" IsReadOnly="true" 
                                            Binding="{Binding AmazonSkuCodes, Converter={StaticResource ProductsToSkuConverter}}"/>

                        <DataGridTextColumn Header="Kod ze skladu" Width="120" 
                                            CellStyle="{StaticResource ToggleableReadonlyCellStyle}"
                                            EditingElementStyle="{StaticResource EditingCellStyle}"
                                            Binding="{resources:ValidatableBinding RelatedWarehouseSection, Mode=TwoWay}" />

                        <DataGridTextColumn Header="Celni prohlaseni" Width="*" 
                                            CellStyle ="{StaticResource UserInputCellStyle}"
                                            EditingElementStyle="{StaticResource EditingCellStyle}"
                                            ElementStyle="{StaticResource UserInputBlockStyle}"
                                            Binding="{Binding CustomsDeclaration}" />

                        <DataGridTextColumn Header="Typ VAT" Width="80"  IsReadOnly="True"
                                            Binding="{Binding VatType}"/>
                    </DataGrid.Columns>
                </resources:ValidatableDataGrid>
            </Grid>
        </TabItem>
        <TabItem Header="Konverze transakci">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="1">
                    <Button Content="Konvertovat transakce" Width="200" Height="35" Command="{Binding ConvertTransactionsCommand}" />
                </StackPanel>
            </Grid>
        </TabItem>
        <TabItem Header="Autovyplnovani">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="1">
                    <Label Content="Nastaveni automatickeho vyplnovani (kod):" HorizontalAlignment="Center" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label Content="RR" />
                        <TextBox MaxLength="6" Name="TrackingCodeBox" Width="100" Text="{Binding TrackingCode, Mode=TwoWay}" TextAlignment="Center" VerticalContentAlignment="Center"></TextBox>
                        <Label Content="xxxCZ" />
                    </StackPanel>
                    <Label Content="Vkladani pomoci kombinace: (nejdrive)F2 + F4" HorizontalAlignment="Center" />
                </StackPanel>
                <StackPanel Grid.Row="2" Width="250" >
                    <Label Content="Vyzkouseni (dej kurzor do prniho policka):" />
                    <TextBox Margin="5" />
                    <TextBox Margin="5" />
                </StackPanel>
            </Grid>
        </TabItem>
    </TabControl>

</Window>

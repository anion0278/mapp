<views:WindowWithSettings x:Class="Mapp.UI.Views.MainWindow"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:viewModels="clr-namespace:Mapp.UI.ViewModels"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:attachedBehaviour="clr-namespace:Mapp.UI.Views.AttachedBehaviour"
                    xmlns:views="clr-namespace:Mapp.UI.Views"
                    xmlns:lex="http://wpflocalizeextension.codeplex.com"
                    xmlns:e="clr-namespace:Mapp.UI.Views.Extensions"
                    mc:Ignorable="d"
                    WindowStartupLocation="Manual"
                    d:DataContext="{d:DesignInstance viewModels:MainViewModel, IsDesignTimeCreatable=True}"

                    lex:LocalizeDictionary.DesignCulture="en"
                    lex:LocalizeDictionary.OutputMissingKeys="True"
                    lex:ResxLocalizationProvider.DefaultAssembly="Mapp.UI"
                    lex:ResxLocalizationProvider.DefaultDictionary="LocalizationStrings">

    <b:Interaction.Behaviors>
        <attachedBehaviour:WindowFullStateToSettingsBehavior/>
    </b:Interaction.Behaviors>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ComboBox Grid.Row="0" Width="100" HorizontalAlignment="Right" 
                  ItemsSource="{Binding AvailableLanguages}" IsSynchronizedWithCurrentItem="True">
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="SelectionChanged">
                    <b:InvokeCommandAction Command="{Binding SetLanguageCommand}" />
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </ComboBox>

        <TabControl Grid.Row="1"  ItemsSource="{Binding Tabs}" IsSynchronizedWithCurrentItem="True">
        <TabControl.ItemContainerStyle>
            <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                <Setter Property="Background" Value="Silver"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Margin="2" Padding="4 2 4 2" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{e:LocBinding Title}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                        <Setter Property="TextDecorations" Value="Underline"/>
                                                        <Setter Property="FontWeight" Value="Medium"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <!--<TextBlock Grid.Column="1" Text="[changed]" Margin="3 -4 0 0" Padding="0" FontSize="12" 
                                                   Visibility="{Binding HasChanges, Converter={StaticResource booleanToVisibilityConverter}}"/>-->
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="FontWeight" Value="UltraBold" />
                        <Setter Property="Background" Value="Aquamarine"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </TabControl.ItemContainerStyle>

    </TabControl>
    </Grid>
</views:WindowWithSettings>
